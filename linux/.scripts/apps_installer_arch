#!/usr/bin/env bash

source ~/.dotfiles/bin/shml.sh

pacman_packages=()

# Misc.
pacman_packages+=(
    base-devel
    bash-completion
    cmake
    cmatrix
    cowsay
    curl
    dconf
    dconf-editor
    fortune-mod
    gcc
    gimp
    glances
    go
    groff
    gvim
    htop
    imagemagick
    inetutils
    jdk8-openjdk
    jq
    jre8-openjdk
    keepass
    libreoffice-fresh
    lolcat
    mercurial
    mono
    mono-addins
    mono-basic
    monodevelop
    nmap
    openssh
    pidgin
    postgresql
    powerline-fonts
    python
    python-pip
    python-virtualenv
    python2
    python2-pip
    qbittorrent
    redshift
    rxvt-unicode
    sl
    steam
    the_silver_searcher
    tigervnc
    tmux
    tree
    unzip
    vlc
    wget
    xdotool
    zsh
    zsh-completions
    zsh-highlighting
)

e_header "Updating OS"
revolver --style simpleDots start
sudo pacman -Syu --noconfirm
revolver stop
e_success "OS updated"

if (( ${#pacman_packages[@]} > 0 )); then
    e_header "Installing pacman packages"
    for package in "${pacman_packages[@]}"; do
        revolver --style line start "$package"
        sudo pacman -S --noconfirm "$package"
    done
    e_success "pacman packages installed"
fi

e_header "Making AUR directory"
mkdir ~/.opt
mkdir ~/.opt/deps

# pacaur
e_header "Installing pacaur"
git clone https://aur.archlinux.org/cower.git ~/.opt/deps/cower
cd ~/.opt/deps/cower
makepkg -s
sudo pacman -U --asdeps cower*.pkg.tar.xz
cd -
git clone https://aur.archlinux.org/pacaur.git ~/.opt/pacaur
cd ~/.opt/pacaur
makepkg -si
cd -
e_success "pacaur installed"

# Antigen
e_header "Installing oh-my-zsh"
git clone https://aur.archlinux.org/antigen-git.git ~/.opt/antigen-git
cd ~/.opt/antigen-git
makepkg -si
cd -
e_success "oh-my-zsh installed"

e_header "Installing zsh configs"
ln -s $HOME/.dotfiles/zsh/ ~/.zsh
ln -s $HOME/.dotfiles/zsh/zshrc ~/.zshrc
ln -s $HOME/.dotfiles/zsh/zprofile ~/.zprofile
e_success "Installed zsh configs"

# Chrome
e_header "Installing Chrome"
git clone https://aur.archlinux.org/google-chrome.git ~/.opt/google-chrome/
cd ~/.opt/google-chrome
makepkg -si
cd -
e_success "Chrome installed"

# Spotify
e_header "Installing Spotify"
git clone https://aur.archlinux.org/libopenssl-1.0-compat.git ~/.opt/deps/libopenssl-1.0-compat
cd ~/.opt/deps/libopenssl-1.0-compat
gpg --recv-keys --keyserver hkp://pgp.mit.edu D9C4D26D0E604491
makepkg -s
sudo pacman -U --asdeps libopenssl-1.0-compat-*.pkg.tar.xz
cd -
git clone https://aur.archlinux.org/libcurl-openssl-1.0.git ~/.opt/deps/libcurl-openssl-1.0
cd ~/.opt/deps/libcurl-openssl-1.0
gpg --recv-keys 5CC908FDB71E12C2
makepkg -s
sudo pacman -U --asdeps libcurl-openssl-1.0-*.pkg.tar.xz
cd -
git clone https://aur.archlinux.org/spotify.git ~/.opt/spotify
cd ~/.opt/spotify
makepkg -si
cd -
e_success "Spotify installed"

e_header "Installing tmuxp"
pip3 install --user tmuxp
e_success "tmuxp installed"

e_header "Installing PIA"
git clone https://aur.archlinux.org/private-internet-access-vpn.git ~/.opt/private-internet-access-vpn
cd ~/.opt/private-internet-access-vpn
makepkg -si
cd -
e_success "PIA installed"

e_header "Installing Emojify (;"
sudo sh -c "curl https://raw.githubusercontent.com/mrowa44/emojify/master/emojify -o /usr/local/bin/emojify && chmod +x /usr/local/bin/emojify"
e_success "Emojify installed $(emojify ":thumbsup:")"

e_header "Installing ttyrec"
git clone https://aur.archlinux.org/ttyrec.git ~/.opt/deps/ttyrec
cd ~/.opt/deps/ttyrec
makepkg -s
sudo pacman -U --asdeps ttyrec-*.pkg.tar.xz
cd -
e_success "ttyrec installed"

e_header "Installing ttygif"
git clone https://aur.archlinux.org/ttygif.git ~/.opt/ttygif
cd ~/.opt/ttygif
makepkg -si
cd -
e_success "ttygif installed"

e_header "Install Keepass2 things"
wget -O ~/Downloads/GoogleSyncPlugin-2.1.2.zip https://downloads.sourceforge.net/project/kp-googlesync/GoogleSyncPlugin-2.x/GoogleSyncPlugin-2.1.2.zip
wget -O ~/Downloads/log4net-2.0.8-bin-newkey.zip http://apache.osuosl.org//logging/log4net/binaries/log4net-2.0.8-bin-newkey.zip
unzip -d ~/Downloads/ ~/Downloads/GoogleSyncPlugin-2.1.2.zip
unzip -d ~/Downloads/ ~/Downloads/log4net-2.0.8-bin-newkey.zip
sudo cp ~/Downloads/GoogleSyncPlugin.plgx /usr/share/keepass/Plugins
sudo cp ~/Downloads/log4net-2.0.8/bin/mono/2.0/release/log4net.dll /usr/share/keepass
sudo cp ~/.dotfiles/linux/.lib/System.ServiceModel.Web.dll /usr/share/keepass
e_success "Keepass2 installed"

e_header "Installing neofetch"
git clone https://aur.archlinux.org/neofetch.git ~/.opt/neofetch
cd ~/.opt/neofetch
makepkg -si
cd -
e_success "neofetch installed"

e_header "Adding pipes"
git clone https://github.com/pipeseroni/pipes.sh.git ~/Downloads/pipes
cd ~/Downloads/pipes
sudo make install
cd -

e_header "Installing Reddit Terminal Viewer"
git clone https://aur.archlinux.org/python3-kitchen.git ~/.opt/deps/python3-kitchen
cd ~/.opt/deps/python3-kitchen
makepkg -s
sudo pacman -U --asdeps python3-kitchen-*.pkg.tar.xz
cd -

git clone https://aur.archlinux.org/rtv.git ~/.opt/rtv
cd ~/.opt/rtv
makepkg -si
cd -
e_success "rtv installed"

e_header "Installing Slack"
git clone https://aur.archlinux.org/slack-desktop.git ~/.opt/slack-desktop
cd ~/.opt/slack-desktop
makepkg -si
cd -
e_success "slack installed"

e_header "Cleaning up files"
rm -rf ~/Downloads/*
e_success "Files cleaned"
